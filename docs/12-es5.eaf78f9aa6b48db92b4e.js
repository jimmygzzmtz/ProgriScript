!function(){function n(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function e(n,e){for(var i=0;i<e.length;i++){var t=e[i];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{TUkU:function(i,t,a){"use strict";a.r(t),a.d(t,"Tab2PageModule",(function(){return v}));var r=a("TEn/"),o=a("ofXK"),c=a("3Pt+"),s=a("tyNb"),p=a("fXoL");function f(n,e){if(1&n){var i=p.Lb();p.Kb(0,"ion-card",3),p.Sb("click",(function(){p.ac(i);var n=e.$implicit;return p.Ub().cardClick(n)})),p.Kb(1,"ion-card-header"),p.Kb(2,"ion-card-title"),p.fc(3),p.Jb(),p.Jb(),p.Kb(4,"ion-card-content"),p.Kb(5,"p"),p.fc(6),p.Jb(),p.Jb(),p.Jb()}if(2&n){var t=e.$implicit;p.xb(3),p.gc(t.name),p.xb(3),p.gc(t.description)}}var b,d,u,l=[{path:"",component:(b=function(){function i(e){n(this,i),this.router=e,this.codeSnippets=[],this.templateCode=["int test = 1;",'string test = "lol";',"for (int i = 0; i < 10; i++){};"],this.fillSnippets()}var t,a,r;return t=i,(a=[{key:"cardClick",value:function(n){this.router.navigate(["/tabs/tab1"],{state:{template:n.code}})}},{key:"fillSnippets",value:function(){this.codeSnippets=[{name:"Date Types",description:"Use different data types depending on the type of the value.",code:"program snippet;\n      var int a;\n      float b;\n      char c;\n      \n      main ( ){\n        a = 1;\n        b = 2.5;\n        c = 'c';\n      }"},{name:"Read/Write",description:"Read and Write values to communicate with the user.",code:"program snippet;\n      var int a, b;\n      main ( ){\n        read(a);\n        read(b);\n        \n        write(a+b);\n      }"},{name:"If/Else",description:"Use If and Else decisions to control which code executes.",code:'program snippet;\n      var int a;\n      \n      main ( ){\n        a = 1;\n        \n        if(a >= 0){\n          write("positive!");\n        }\n        else{\n          write("negative!");\n        }\n        \n      }'},{name:"For/While Loops",description:"Use For or While loops to execute code until a condition is met.",code:"program snippet;\n      var int a, b;\n      \n      main ( ){\n        for a = 0 to 5{\n          write(a);\n        }\n        \n        b = 5;\n      \n        while(b <= 10){\n          write(b);\n          b = b + 1;\n        }\n        \n      }"},{name:"Functions",description:"Use functions to avoid repeating code.",code:"program snippet;\n      var int a, b;\n      \n      function int sum(int c, int d)\n      {\n        return (c + d);\n      }\n      \n      main ( ){\n        read(a);\n        read(b);\n        write(sum(a, b));\n      }"},{name:"1D Arrays",description:"A way to store more than one value in a data type.",code:"program test;\n      var int a[5];\n      \n      main ( ){\n          a[3] = (9/3);\n          a[2] = (6*3);\n          write(a[3] + a[2]);\n      }"},{name:"2D Arrays",description:"A way to store more than one value per row in a data type.",code:"program test;\n      var int a[5][5];\n      \n      main ( ){\n          a[3][2] = 1;\n          a[2][1] = (6*3);\n          write(a[3][2] + a[2][1] + 1);\n      }"},{name:"Iterative Factorial",description:"An iterative way to obtain the factorial of a number.",code:'program snippet;\n      var int n, fact, i;\n      \n      main ( ){\n        write("Enter a positive integer: ");\n        read(n);\n        fact = 1;\n        i = 1;\n        for i = 1 to (n+1){\n          fact = fact * i;\n        }\n        write(fact);\n      }'},{name:"Iterative Fibonacci",description:"An iterative way to obtain the fibonacci series.",code:'program snippet;\n      var int n;\n      \n      function void fib(int num)\n      var int x, y, z, i;\n      {\n        x = 0;\n        y = 1;\n        z = 0;\n        for i = 0 to num{\n            write(x);\n            z = x + y;\n            x = y;\n            y = z;\n        }\n      }\n      \n      main ( ){\n        write("Enter fibonnaci series");\n        read(n);\n        fib(n);\n      }'},{name:"Recursive Factorial",description:"A recursive way to obtain the factorial of a number.",code:'program snippet;\n      var int n;\n      \n      function int factorial(int f)\n      {\n        if(f > 1){\n            return (f * factorial(f - 1));\n        }\n        else{\n            return (1);\n        }\n      }\n      \n      main ( ){\n        write("Enter a positive integer: ");\n        read(n);\n        write(factorial(n));\n      }'},{name:"Recursive Fibonacci",description:"A recursive way to obtain the fibonacci series.",code:'program snippet;\n      var int a, i;\n      \n      function int fibonacci(int a)\n      {\n        if( (a == 0) || (a == 1) ) {\n            return(a);\n        }\n        else {\n            return (fibonacci(a - 1) + fibonacci(a - 2));\n        }\n      }\n      \n      main ( ){\n        i = 0;\n        write("Number of series : ");\n        read(a);\n        write("Fibonnaci Series : ");\n        while(i < a) {\n            write (fibonacci(i));\n            i = i + 1;\n        }\n      }'}]}}])&&e(t.prototype,a),r&&e(t,r),i}(),b.\u0275fac=function(n){return new(n||b)(p.Hb(s.g))},b.\u0275cmp=p.Bb({type:b,selectors:[["app-tab2"]],decls:6,vars:3,consts:[[3,"translucent"],[3,"fullscreen"],["button","true",3,"click",4,"ngFor","ngForOf"],["button","true",3,"click"]],template:function(n,e){1&n&&(p.Kb(0,"ion-header",0),p.Kb(1,"ion-toolbar"),p.Kb(2,"ion-title"),p.fc(3," Snippets "),p.Jb(),p.Jb(),p.Jb(),p.Kb(4,"ion-content",1),p.ec(5,f,7,2,"ion-card",2),p.Jb()),2&n&&(p.Xb("translucent",!0),p.xb(4),p.Xb("fullscreen",!0),p.xb(1),p.Xb("ngForOf",e.codeSnippets))},directives:[r.i,r.u,r.t,r.h,o.h,r.d,r.f,r.g,r.e],styles:[""]}),b)}],m=((u=function e(){n(this,e)}).\u0275mod=p.Fb({type:u}),u.\u0275inj=p.Eb({factory:function(n){return new(n||u)},imports:[[s.i.forChild(l)],s.i]}),u),v=((d=function e(){n(this,e)}).\u0275mod=p.Fb({type:d}),d.\u0275inj=p.Eb({factory:function(n){return new(n||d)},imports:[[r.v,o.b,c.a,m]]}),d)}}])}();