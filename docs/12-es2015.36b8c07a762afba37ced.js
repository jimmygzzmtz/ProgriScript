(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{TUkU:function(n,e,t){"use strict";t.r(e),t.d(e,"Tab2PageModule",(function(){return u}));var i=t("TEn/"),o=t("ofXK"),r=t("3Pt+"),a=t("qtYk"),c=t("tyNb"),s=t("fXoL");function p(n,e){if(1&n){const n=s.Lb();s.Kb(0,"ion-card",3),s.Sb("click",(function(){s.ac(n);const t=e.$implicit;return s.Ub().cardClick(t)})),s.Kb(1,"ion-card-header"),s.Kb(2,"ion-card-title"),s.fc(3),s.Jb(),s.Jb(),s.Kb(4,"ion-card-content"),s.Kb(5,"p"),s.fc(6),s.Jb(),s.Jb(),s.Jb()}if(2&n){const n=e.$implicit;s.xb(3),s.gc(n.name),s.xb(3),s.gc(n.description)}}const b=[{path:"",component:(()=>{class n{constructor(n){this.router=n,this.codeSnippets=[],this.templateCode=["int test = 1;",'string test = "lol";',"for (int i = 0; i < 10; i++){};"],this.fillSnippets()}cardClick(n){this.router.navigate(["/tabs/tab1"],{state:{template:n.code}})}fillSnippets(){this.codeSnippets=[{name:"Date Types",description:"Use different data types depending on the type of the value.",code:"program snippet;\n      var int a;\n      float b;\n      char c;\n      \n      main ( ){\n        a = 1;\n        b = 2.5;\n        c = 'c';\n      }"},{name:"Read/Write",description:"Read and Write values to communicate with the user.",code:"program snippet;\n      var int a, b;\n      main ( ){\n        read(a);\n        read(b);\n        \n        write(a+b);\n      }"},{name:"If/Else",description:"Use If and Else decisions to control which code executes.",code:'program snippet;\n      var int a;\n      \n      main ( ){\n        a = 1;\n        \n        if(a >= 0){\n          write("positive!");\n        }\n        else{\n          write("negative!");\n        }\n        \n      }'},{name:"For/While Loops",description:"Use For or While loops to execute code until a condition is met.",code:"program snippet;\n      var int a, b;\n      \n      main ( ){\n        for a = 0 to 5{\n          write(a);\n        }\n        \n        b = 5;\n      \n        while(b <= 10){\n          write(b);\n          b = b + 1;\n        }\n        \n      }"},{name:"Functions",description:"Use functions to avoid repeating code.",code:"program snippet;\n      var int a, b;\n      \n      function int sum(int c, int d)\n      {\n        return (c + d);\n      }\n      \n      main ( ){\n        read(a);\n        read(b);\n        write(sum(a, b));\n      }"},{name:"Fibonacci Series",description:"A more complex example using recursive functions.",code:'program snippet;\n      var int a, i;\n      \n      function int fibonacci(int a)\n      {\n        if( (a == 0) || (a == 1) ) {\n            return(a);\n        }\n        else {\n            return (fibonacci(a - 1) + fibonacci(a - 2));\n        }\n      }\n      \n      main ( ){\n        i = 0;\n        write("Number of series : ");\n        read(a);\n        write("Fibonnaci Series : ");\n        while(i < a) {\n            write (fibonacci(i));\n            i = i + 1;\n        }\n      }'}]}}return n.\u0275fac=function(e){return new(e||n)(s.Hb(c.g))},n.\u0275cmp=s.Bb({type:n,selectors:[["app-tab2"]],decls:6,vars:3,consts:[[3,"translucent"],[3,"fullscreen"],["button","true",3,"click",4,"ngFor","ngForOf"],["button","true",3,"click"]],template:function(n,e){1&n&&(s.Kb(0,"ion-header",0),s.Kb(1,"ion-toolbar"),s.Kb(2,"ion-title"),s.fc(3," Snippets "),s.Jb(),s.Jb(),s.Jb(),s.Kb(4,"ion-content",1),s.ec(5,p,7,2,"ion-card",2),s.Jb()),2&n&&(s.Xb("translucent",!0),s.xb(4),s.Xb("fullscreen",!0),s.xb(1),s.Xb("ngForOf",e.codeSnippets))},directives:[i.i,i.u,i.t,i.h,o.h,i.d,i.f,i.g,i.e],styles:[""]}),n})()}];let d=(()=>{class n{}return n.\u0275mod=s.Fb({type:n}),n.\u0275inj=s.Eb({factory:function(e){return new(e||n)},imports:[[c.i.forChild(b)],c.i]}),n})(),u=(()=>{class n{}return n.\u0275mod=s.Fb({type:n}),n.\u0275inj=s.Eb({factory:function(e){return new(e||n)},imports:[[i.v,o.b,r.a,a.a,d]]}),n})()},qtYk:function(n,e,t){"use strict";t.d(e,"a",(function(){return c}));var i=t("ofXK"),o=t("3Pt+"),r=t("TEn/"),a=t("fXoL");let c=(()=>{class n{}return n.\u0275mod=a.Fb({type:n}),n.\u0275inj=a.Eb({factory:function(e){return new(e||n)},imports:[[i.b,o.a,r.v]]}),n})()}}]);